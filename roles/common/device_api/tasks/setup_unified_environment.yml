---
# Setup unified Device API environment
# Handles submodule synchronization and directory structure

- name: Ensure parent directory exists
  ansible.builtin.file:
    path: "{{ ansible_user_dir }}/orangead"
    state: directory
    owner: "{{ ansible_user }}"
    mode: "0755"
  become: true

- name: Check if unified API directory exists
  ansible.builtin.stat:
    path: "{{ device_api_path }}"
  register: unified_api_dir

- name: Clone oaDeviceAPI repository (if not exists)
  ansible.builtin.git:
    repo: "{{ device_api.repository_url | default('https://github.com/oa-device/oaDeviceAPI.git') }}"
    dest: "{{ device_api_path }}"
    version: "{{ device_api.branch | default('main') }}"
    force: false
  when: not unified_api_dir.stat.exists
  become_user: "{{ ansible_user }}"

- name: Update oaDeviceAPI to latest version (conditional on force flag)
  ansible.builtin.git:
    repo: "{{ device_api.repository_url | default('https://github.com/oa-device/oaDeviceAPI.git') }}"
    dest: "{{ device_api_path }}"
    version: "{{ device_api.branch | default('main') }}"
    force: true
    update: true
  when: 
    - unified_api_dir.stat.exists
    - device_api_force_update | default(false)
  become_user: "{{ ansible_user }}"
  register: unified_api_update

- name: Force git reset to ensure clean state (when force update enabled)
  ansible.builtin.shell: |
    cd {{ device_api_path }}
    git fetch --all
    git reset --hard origin/{{ device_api.branch | default('main') }}
    git clean -fd
  become_user: "{{ ansible_user }}"
  when: 
    - unified_api_dir.stat.exists
    - device_api_force_update | default(false)
  register: git_force_reset
  changed_when: true

- name: Report git force update status
  ansible.builtin.debug:
    msg: |
      [GIT] Device API Force Update: {{ 'ENABLED' if device_api_force_update | default(false) else 'DISABLED' }}
      {% if device_api_force_update | default(false) %}
      Repository will be forcefully updated to latest commit
      {% else %}
      Repository will remain at current commit (use --force to update)
      {% endif %}

- name: Check repository status and commit information
  ansible.builtin.shell: |
    cd {{ device_api_path }}
    echo "BEFORE_COMMIT:$(git log -1 --format='%H' HEAD~1 2>/dev/null || echo 'initial')"
    echo "AFTER_COMMIT:$(git log -1 --format='%H')"
    echo "COMMIT_MESSAGE:$(git log -1 --format='%s')"
    echo "BRANCH:$(git branch --show-current)"
  become_user: "{{ ansible_user }}"
  when: 
    - unified_api_dir.stat.exists
    - device_api_force_update | default(false)
  register: git_status_info
  changed_when: false

- name: Parse repository update information (when force update was applied)
  ansible.builtin.set_fact:
    deviceapi_repo_updated: "{{ device_api_force_update | default(false) }}"
    deviceapi_before_commit: "{{ git_status_info.stdout_lines | select('match', '^BEFORE_COMMIT:') | first | regex_replace('^BEFORE_COMMIT:', '') | default('unknown') }}"
    deviceapi_after_commit: "{{ git_status_info.stdout_lines | select('match', '^AFTER_COMMIT:') | first | regex_replace('^AFTER_COMMIT:', '') | default('unknown') }}"
    deviceapi_commit_message: "{{ git_status_info.stdout_lines | select('match', '^COMMIT_MESSAGE:') | first | regex_replace('^COMMIT_MESSAGE:', '') | default('N/A') }}"
    deviceapi_current_branch: "{{ git_status_info.stdout_lines | select('match', '^BRANCH:') | first | regex_replace('^BRANCH:', '') | default('main') }}"
  when: 
    - unified_api_dir.stat.exists 
    - device_api_force_update | default(false)
    - git_status_info is defined 
    - git_status_info.stdout_lines is defined

- name: Set fallback repository information (when no force update)
  ansible.builtin.set_fact:
    deviceapi_repo_updated: false
    deviceapi_before_commit: "current"
    deviceapi_after_commit: "current"
    deviceapi_commit_message: "No update performed (force flag not set)"
    deviceapi_current_branch: "{{ device_api.branch | default('main') }}"
  when: 
    - unified_api_dir.stat.exists
    - not (device_api_force_update | default(false))

- name: Display detailed repository update status
  ansible.builtin.debug:
    msg: |
      ===============================================
      Repository Update Status (Force Mode)
      ===============================================
      - Repository: {{ device_api.repository_url | default('https://github.com/oa-device/oaDeviceAPI.git') }}
      - Target Branch: {{ device_api.branch | default('main') }}
      - Current Branch: {{ deviceapi_current_branch | default('unknown') }}
      - Before Commit: {{ deviceapi_before_commit | default('N/A') }}
      - After Commit: {{ deviceapi_after_commit | default('N/A') }}
      - Commit Message: {{ deviceapi_commit_message | default('N/A') }}
      - Force Updated: {{ deviceapi_repo_updated | default(false) }}
      - Git Reset Applied: {{ git_force_reset.changed | default(false) }}
      ===============================================
  when: unified_api_dir.stat.exists

- name: Ensure proper ownership
  ansible.builtin.file:
    path: "{{ device_api_path }}"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user if platform_state.is_ubuntu else 'staff' }}"
    recurse: true
  become: true

- name: Create logs directory
  ansible.builtin.file:
    path: "{{ device_api_path }}/logs"
    state: directory
    owner: "{{ ansible_user }}"
    mode: "0755"
  become: true

- name: Setup platform-specific configuration
  ansible.builtin.template:
    src: "{{ item.src }}"
    dest: "{{ device_api_path }}/{{ item.dest }}"
    owner: "{{ ansible_user }}"
    mode: "0644"
  loop:
    - { src: "device_api.env.j2", dest: ".env" }
  become_user: "{{ ansible_user }}"

- name: Display environment setup results
  ansible.builtin.debug:
    msg: |
      Unified Device API Environment:
      - Path: {{ device_api_path }}
      - Repository updated: {{ unified_api_update.changed | default(false) }}
      - Platform: {{ detected_platform }}
      - Service name: {{ device_api_service_name }}