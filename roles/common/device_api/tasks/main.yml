---
# Unified Device API Deployment Role
# Replaces platform-specific API deployments with unified oaDeviceAPI

- name: Import state detection for device API
  ansible.builtin.include_tasks: ../../../tasks/state-detection.yml
  tags: ["always"]

- name: Deploy unified Device API
  when: platform_state.is_supported
  block:
    - name: Set device API deployment path
      ansible.builtin.set_fact:
        device_api_path: "{{ ansible_user_dir }}/orangead/oaDeviceAPI"
        device_api_service_name: "{{ 'com.orangead.deviceapi' if platform_state.is_macos else 'orangead-deviceapi' }}"
        device_api_python: "{{ python_state.version_info.path }}"

    - name: Check current deployment status  
      ansible.builtin.include_tasks: deployment_check.yml
      tags: ["deviceapi", "check", "status"]

    - name: Setup unified API environment
      ansible.builtin.include_tasks: setup_unified_environment.yml
      when: deviceapi_deployment_needed
      tags: ["deviceapi", "setup", "files"]

    - name: Configure Python environment
      ansible.builtin.include_tasks: python_environment.yml
      when: deviceapi_deployment_needed
      tags: ["deviceapi", "python", "dependencies"]

    - name: Configure platform-specific service
      ansible.builtin.include_tasks: service_configuration.yml
      when: deviceapi_deployment_needed
      tags: ["deviceapi", "service"]

    - name: Validate deployment
      ansible.builtin.include_tasks: deployment_validation.yml
      tags: ["deviceapi", "validation"]

- name: Set deployment completion facts
  ansible.builtin.set_fact:
    unified_deviceapi_deployed: true
    unified_deviceapi_status: >
      {{
        'running' if deviceapi_service_running | default(false)
        else 'configured' if deviceapi_deployment_needed | default(false)
        else 'skipped'
      }}
    unified_deviceapi_platform: "{{ platform_state.detected_platform }}"
  when: platform_state.is_supported