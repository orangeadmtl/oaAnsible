#!/bin/bash
# macOS ML Development Environment Configuration
# Generated by Ansible oaAnsible/roles/macos/ml_workstation

# Apple Silicon optimizations
{% if is_apple_silicon %}
export PYTORCH_ENABLE_MPS_FALLBACK=1
export PYTORCH_MPS_HIGH_WATERMARK_RATIO=0.0
{% endif %}

# Performance settings
export OMP_NUM_THREADS="{{ ansible_processor_vcpus }}"
export MKL_NUM_THREADS="{{ ansible_processor_vcpus }}"
export VECLIB_MAXIMUM_THREADS="{{ ansible_processor_vcpus }}"

# Use Apple's Accelerate framework
export ACCELERATE=1

# OpenCV optimizations for macOS
export OPENCV_LOG_LEVEL=ERROR

# ML development paths
export OASENTINEL_HOME="{{ oasentinel_install_dir }}"
export ML_MODELS_PATH="{{ oasentinel_models_dir }}"
export ML_DATA_PATH="{{ oasentinel_data_dir }}"

# Additional macOS-specific aliases
alias gpu-temp="sudo powermetrics -i 1000 -n 1 --samplers smc | grep -i temp"
alias memory-pressure="memory_pressure"
alias ml-activity="open -a 'Activity Monitor'"

{% if is_apple_silicon %}
# Apple Silicon specific functions
check-mps() {
    cd "$OASENTINEL_HOME" && source .venv/bin/activate
    python -c "
import torch
print('MPS Available:', torch.backends.mps.is_available())
print('MPS Built:', torch.backends.mps.is_built())
if torch.backends.mps.is_available():
    print('[OK] Ready for GPU acceleration!')
else:
    print('[WARNING]  MPS not available')
"
}

gpu-usage() {
    echo "Checking GPU usage via Activity Monitor..."
    system_profiler SPDisplaysDataType | grep -A5 "Metal"
}
{% endif %}

# Training optimization functions
optimize-training() {
    echo "[MACOS] macOS Training Optimizations Active:"
    echo "  CPU Cores: {{ ansible_processor_vcpus }}"
    echo "  Memory: {{ ansible_memtotal_mb }}MB"
    {% if is_apple_silicon %}
    echo "  GPU: Apple Silicon (MPS)"
    {% else %}
    echo "  GPU: Intel Integrated/Discrete"
    {% endif %}
    echo "  Accelerate Framework: Enabled"
    echo ""
    echo "Recommended batch sizes:"
    {% if ansible_memtotal_mb|int >= 16384 %}
    echo "  - Training: 16-32"
    echo "  - Inference: 32-64"
    {% else %}
    echo "  - Training: 8-16"
    echo "  - Inference: 16-32"
    {% endif %}
}

# System monitoring
ml-system-status() {
    echo "[MACOS] macOS ML System Status"
    echo "========================="
    echo "Uptime: $(uptime | cut -d',' -f1 | cut -d' ' -f4-)"
    echo "Load: $(uptime | cut -d':' -f4-)"
    echo "Memory: $(vm_stat | head -n4 | tail -n3)"
    echo "Disk: $(df -h / | tail -1 | awk '{print $4 " available (" $5 " used)"}')"
    echo ""
    {% if is_apple_silicon %}
    echo "GPU Status:"
    system_profiler SPDisplaysDataType | grep -E "(Chipset|VRAM|Metal)" | head -3
    {% endif %}
}

echo "[MACOS] macOS ML Environment loaded"
echo "Use 'optimize-training' for performance tips"
{% if is_apple_silicon %}
echo "Use 'check-mps' to verify GPU acceleration"
{% endif %}