#!/usr/bin/env python3
"""
MediaMTX Camera Reader Demo
Reads camera data via RTSP stream from MediaMTX
Generated by Ansible for {{ inventory_hostname }}

Usage:
  python3 read_camera.py           # With display window
  python3 read_camera.py --headless # Without display
"""

import cv2
import time
import requests
import sys

def check_mediamtx_status():
    """Check if MediaMTX is running"""
    try:
        response = requests.get('http://localhost:{{ mediamtx_demo.streaming.api_port }}/v1/paths/list', timeout=5)
        return response.status_code == 200
    except:
        return False

def read_rtsp_stream(rtsp_url="rtsp://localhost:{{ mediamtx_demo.streaming.rtsp_port }}/{{ mediamtx_demo.streaming.stream_path }}", headless=False):
    """Read RTSP stream and display frame info"""
    print(f"🎥 Connecting to: {rtsp_url}")
    
    cap = cv2.VideoCapture(rtsp_url)
    
    if not cap.isOpened():
        print("❌ Error: Could not open RTSP stream")
        print("💡 Make sure camera is streaming:")
        print("   ffmpeg -f avfoundation -i \"{{ mediamtx_demo.camera.device_id }}\" -c:v {{ mediamtx_demo.camera.codec }} -preset {{ mediamtx_demo.camera.preset }} -r {{ mediamtx_demo.camera.framerate }} -f rtsp rtsp://localhost:{{ mediamtx_demo.streaming.rtsp_port }}/{{ mediamtx_demo.streaming.stream_path }}")
        return
    
    print("✅ RTSP stream connected")
    print("📹 Reading camera data..." + (" (headless mode)" if headless else " (Press 'q' to quit)"))
    
    frame_count = 0
    start_time = time.time()
    
    try:
        while True:
            ret, frame = cap.read()
            
            if not ret:
                print("⚠️ Failed to read frame")
                break
                
            frame_count += 1
            
            # Display frame info every 30 frames (~1 second at 30fps)
            if frame_count % 30 == 0:
                elapsed = time.time() - start_time
                fps = frame_count / elapsed if elapsed > 0 else 0
                height, width = frame.shape[:2]
                print(f"📊 Frame {frame_count}: {width}x{height}, FPS: {fps:.1f}")
            
            if not headless:
                # Display the frame
                cv2.imshow('MediaMTX Camera Stream', frame)
                if cv2.waitKey(1) & 0xFF == ord('q'):
                    break
            else:
                # Headless mode - run for ~3 seconds as demo
                if frame_count >= 90:
                    break
                    
    except KeyboardInterrupt:
        print("\n🛑 Stopped by user")
    
    cap.release()
    if not headless:
        cv2.destroyAllWindows()
    print(f"🏁 Finished reading {frame_count} frames")

def main():
    """Main function"""
    headless = '--headless' in sys.argv
    
    print("🚀 MediaMTX Camera Reader Demo")
    print("=" * 40)
    
    if not check_mediamtx_status():
        print("❌ MediaMTX is not running")
        print("💡 Start it with: {{ mediamtx_demo.demo.base_dir }}/scripts/start.sh")
        return
    
    print("✅ MediaMTX is running")
    read_rtsp_stream(headless=headless)

if __name__ == "__main__":
    main()