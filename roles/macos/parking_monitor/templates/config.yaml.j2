# Parking Monitor Configuration
# Generated by Ansible on {{ ansible_date_time.iso8601 }}

# Service Configuration
service:
  name: "{{ parking_monitor_service.name }}"
  port: {{ parking_monitor_service.port }}
  host: "0.0.0.0"
  log_level: "{{ parking_monitor_logging.level }}"
  debug: {{ parking_monitor_debug.enabled | default(false) | bool }}

# Detection Configuration
detection:
  model_path: "{{ parking_monitor_detection.model_path }}"
  confidence_threshold: {{ parking_monitor_detection.confidence_threshold }}
  nms_threshold: {{ parking_monitor_detection.nms_threshold }}
  target_fps: {{ parking_monitor_detection.target_fps }}
  device: "{{ parking_monitor_detection.device }}"
  batch_size: {{ parking_monitor_detection.batch_size | default(1) }}
  
  # Performance optimization
  optimization:
    level: "{{ parking_monitor_detection.optimization_level | default('medium') }}"
    model_caching: {{ parking_monitor_performance.model_caching | default(true) | bool }}
    frame_caching: {{ parking_monitor_performance.frame_caching | default(true) | bool }}
    gpu_acceleration: {{ parking_monitor_performance.gpu_acceleration | default(true) | bool }}

# Camera Configuration
camera:
  source: {{ parking_monitor_camera.source }}
  resolution: {{ parking_monitor_camera.resolution | to_json }}
  fps: {{ parking_monitor_camera.fps }}
  buffer_size: {{ parking_monitor_camera.buffer_size | default(1) }}
  auto_exposure: {{ parking_monitor_camera.auto_exposure | default(true) | bool }}
  auto_focus: {{ parking_monitor_camera.auto_focus | default(true) | bool }}

# Parking Zones Configuration
parking_zones:
  auto_detect: {{ parking_monitor_zones.auto_detect | default(true) | bool }}
  total_spaces: {{ parking_monitor_zones.total_spaces | default(0) }}
  
  # Manual zones (if auto_detect is false)
  zones:
{% if parking_monitor_zones.manual_zones is defined and parking_monitor_zones.manual_zones | length > 0 %}
{% for zone in parking_monitor_zones.manual_zones %}
    - id: "{{ zone.id }}"
      name: "{{ zone.name }}"
      spaces: {{ zone.spaces }}
      coordinates: {{ zone.coordinates | to_json }}
{% endfor %}
{% else %}
    # Default zone template - configure based on site layout
    - id: "default"
      name: "Default Zone"
      spaces: 1
      coordinates: [[0, 0], [100, 0], [100, 100], [0, 100]]
{% endif %}

# Display Configuration
display:
  enabled: {{ parking_monitor_display.enabled | default(true) | bool }}
  overlay_enabled: {{ parking_monitor_display.overlay_enabled | default(true) | bool }}
  overlay_opacity: {{ parking_monitor_display.overlay_opacity | default(0.7) }}
  status_position: "{{ parking_monitor_display.status_position | default('top_right') }}"
  show_vehicle_info: {{ parking_monitor_display.show_vehicle_info | default(true) | bool }}
  show_fps: {{ parking_monitor_display.show_fps | default(false) | bool }}
  show_debug_info: {{ parking_monitor_display.show_debug_info | default(false) | bool }}
  ad_integration: {{ parking_monitor_display.ad_integration | default(true) | bool }}

# Health Monitoring Configuration
health_monitoring:
  enabled: {{ parking_monitor_health.enabled | default(true) | bool }}
  check_interval: {{ parking_monitor_health.check_interval | default(30) }}
  metrics_retention_hours: {{ parking_monitor_health.metrics_retention_hours | default(24) }}
  performance_monitoring: {{ parking_monitor_health.performance_monitoring | default(true) | bool }}
  auto_recovery: {{ parking_monitor_health.auto_recovery | default(true) | bool }}
  
  thresholds:
    min_fps: {{ parking_monitor_health.thresholds.min_fps | default(25) }}
    max_memory_gb: {{ parking_monitor_health.thresholds.max_memory_gb | default(4) }}
    max_cpu_percent: {{ parking_monitor_health.thresholds.max_cpu_percent | default(80) }}
    min_accuracy: {{ parking_monitor_health.thresholds.min_accuracy | default(0.9) }}
    max_detection_latency_ms: {{ parking_monitor_health.thresholds.max_detection_latency_ms | default(100) }}

# Logging Configuration
logging:
  level: "{{ parking_monitor_logging.level }}"
  format: "{{ parking_monitor_logging.format | default('structured') }}"
  max_file_size: "{{ parking_monitor_logging.max_file_size | default('100MB') }}"
  max_files: {{ parking_monitor_logging.max_files | default(5) }}
  console_output: {{ parking_monitor_logging.console_output | default(false) | bool }}
  file_output: {{ parking_monitor_logging.file_output | default(true) | bool }}
  
  # Log file locations
  files:
    main: "{{ parking_monitor_repository.destination }}/logs/parking_monitor.log"
    detection: "{{ parking_monitor_repository.destination }}/logs/detection.log"
    performance: "{{ parking_monitor_repository.destination }}/logs/performance.log"
    error: "{{ parking_monitor_repository.destination }}/logs/error.log"

# API Configuration
api:
  enabled: {{ parking_monitor_integration.api_enabled | default(true) | bool }}
  cors_enabled: true
  cors_origins:
    - "http://localhost:*"
    - "http://127.0.0.1:*"
{% if tailscale_subnet is defined %}
    - "http://{{ tailscale_subnet | regex_replace('/.*', '') }}:*"
{% endif %}
  
  # Rate limiting
  rate_limiting:
    enabled: true
    requests_per_minute: 60
    burst_size: 10

# WebSocket Configuration  
websocket:
  enabled: {{ parking_monitor_integration.websocket_enabled | default(true) | bool }}
  max_connections: 10
  heartbeat_interval: 30

# Performance Configuration
performance:
  memory_limit_gb: {{ parking_monitor_performance.memory_limit_gb | default(4) }}
  cpu_limit_percent: {{ parking_monitor_performance.cpu_limit_percent | default(80) }}
  optimization_profile: "{{ parking_monitor_performance.optimization_profile | default('balanced') }}"
  
  # Thermal management
  thermal_management:
    enabled: true
    temperature_threshold: 80  # Celsius
    throttle_on_overheat: true

# Integration Configuration
integration:
  dashboard:
    enabled: {{ parking_monitor_integration.dashboard_enabled | default(true) | bool }}
    health_proxy: {{ parking_monitor_integration.health_proxy | default(true) | bool }}
    metrics_export: {{ parking_monitor_integration.metrics_export | default(true) | bool }}
  
  # External services
  services:
    device_api:
      enabled: true
      url: "http://localhost:9090"
    
    player:
      enabled: {{ player.enabled | default(false) | bool }}
      overlay_integration: {{ player.parking_overlay | default(false) | bool }}

# Development Configuration (only if debug enabled)
{% if parking_monitor_debug.enabled | default(false) %}
development:
  save_detection_frames: {{ parking_monitor_debug.save_detection_frames | default(false) | bool }}
  performance_profiling: {{ parking_monitor_debug.performance_profiling | default(false) | bool }}
  memory_profiling: {{ parking_monitor_debug.memory_profiling | default(false) | bool }}
  debug_api_enabled: {{ parking_monitor_debug.debug_api_enabled | default(false) | bool }}
  
  # Debug directories
  debug_output_dir: "{{ parking_monitor_repository.destination }}/debug"
  frame_save_dir: "{{ parking_monitor_repository.destination }}/debug/frames"
  profile_output_dir: "{{ parking_monitor_repository.destination }}/debug/profiles"
{% endif %}

# Site-specific Configuration
site:
  name: "{{ project_name | default('unknown') | title }}"
  location: "{{ location | default('Unknown Location') }}"
  environment: "{{ target_env | default('unknown') }}"
  deployment_time: "{{ ansible_date_time.iso8601 }}"
  
  # Site-specific parking configuration
{% if parking_zone is defined %}
  assigned_zone: "{{ parking_zone }}"
{% endif %}
{% if device_role is defined %}
  device_role: "{{ device_role }}"
{% endif %}