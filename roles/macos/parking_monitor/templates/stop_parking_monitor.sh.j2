#!/bin/bash
# Stop script for Parking Monitor Service
# Generated by Ansible

set -euo pipefail

# Service configuration
SERVICE_NAME="{{ parking_monitor_service.name }}"
PLIST_PATH="{{ parking_monitor_launchd.plist_path }}"
WORKING_DIR="{{ parking_monitor_repository.destination }}"
LOG_FILE="$WORKING_DIR/logs/parking_monitor.log"

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# Function to log messages
log_info() {
    echo -e "${GREEN}[$(date '+%Y-%m-%d %H:%M:%S')] [INFO] $1${NC}" | tee -a "$LOG_FILE"
}

log_warn() {
    echo -e "${YELLOW}[$(date '+%Y-%m-%d %H:%M:%S')] [WARN] $1${NC}" | tee -a "$LOG_FILE"
}

log_error() {
    echo -e "${RED}[$(date '+%Y-%m-%d %H:%M:%S')] [ERROR] $1${NC}" | tee -a "$LOG_FILE" >&2
}

# Stop function
stop_service() {
    log_info "Stopping $SERVICE_NAME..."
    
    # Try to unload LaunchAgent first
    if [[ -f "$PLIST_PATH" ]]; then
        if launchctl list | grep -q "$SERVICE_NAME"; then
            log_info "Unloading LaunchAgent..."
            if launchctl unload "$PLIST_PATH" 2>/dev/null; then
                log_info "[OK] LaunchAgent unloaded successfully"
            else
                log_warn "Failed to unload LaunchAgent (may not be loaded)"
            fi
        else
            log_info "LaunchAgent not currently loaded"
        fi
    else
        log_warn "LaunchAgent plist not found: $PLIST_PATH"
    fi
    
    # Kill any remaining processes
    local pids=$(pgrep -f "parking_monitor" 2>/dev/null || true)
    if [[ -n "$pids" ]]; then
        log_info "Terminating parking monitor processes: $pids"
        echo "$pids" | xargs kill -TERM 2>/dev/null || true
        
        # Wait a moment for graceful shutdown
        sleep 2
        
        # Force kill if still running
        pids=$(pgrep -f "parking_monitor" 2>/dev/null || true)
        if [[ -n "$pids" ]]; then
            log_warn "Force killing remaining processes: $pids"
            echo "$pids" | xargs kill -KILL 2>/dev/null || true
        fi
    fi
    
    # Verify service is stopped
    if pgrep -f "parking_monitor" >/dev/null 2>&1; then
        log_error "Service may still be running"
        return 1
    else
        log_info "[OK] Service stopped successfully"
        return 0
    fi
}

# Main execution
case "${1:-stop}" in
    stop)
        stop_service
        exit $?
        ;;
    restart)
        stop_service
        sleep 2
        log_info "Starting service..."
        if [[ -f "$PLIST_PATH" ]]; then
            launchctl load "$PLIST_PATH"
            log_info "[OK] Service restarted"
        else
            log_error "Cannot restart: LaunchAgent plist not found"
            exit 1
        fi
        ;;
    *)
        echo "Usage: $0 [stop|restart]"
        exit 1
        ;;
esac