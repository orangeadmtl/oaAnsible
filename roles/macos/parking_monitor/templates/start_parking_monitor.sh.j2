#!/bin/bash
# Parking Monitor Startup Script - Generated by Ansible
# This script handles environment setup and starts the parking monitor service

set -euo pipefail

PROJECT_DIR="{{ parking_monitor_repository.destination }}"
cd "$PROJECT_DIR"

# Export environment variables
{% for key, value in parking_monitor_environment.items() %}
export {{ key }}="{{ value }}"
{% endfor %}

# Ensure PATH includes uv location
export PATH="$HOME/.cargo/bin:/opt/homebrew/bin:/usr/local/bin:$PATH"

# Log startup
echo "$(date): Starting Parking Monitor Service"
echo "Project Directory: $PROJECT_DIR"
echo "Environment: $PARKING_MONITOR_ENV"

# Ensure uv is available
if ! command -v uv &> /dev/null; then
    echo "❌ uv not found. Installing..."
    curl -LsSf https://astral.sh/uv/install.sh | sh
    source $HOME/.cargo/env
    echo "✅ uv installed successfully"
fi

# Ensure dependencies are installed
if [ ! -f ".venv/pyvenv.cfg" ]; then
    echo "📦 Installing dependencies with uv..."
    uv sync
    echo "✅ Dependencies installed"
fi

# Use project's own startup script if available, otherwise start directly
if [ -f "./scripts/start.sh" ] && [ -x "./scripts/start.sh" ]; then
    echo "🚀 Using project's start.sh script"
    exec ./scripts/start.sh
elif [ -f "parking_monitor.py" ]; then
    echo "🚀 Starting parking monitor directly with uv"
    exec uv run python parking_monitor.py
elif [ -f "src/main.py" ]; then
    echo "🚀 Starting parking monitor from src/main.py"
    exec uv run python src/main.py
else
    echo "❌ No suitable startup file found"
    echo "Looked for: ./scripts/start.sh, parking_monitor.py, src/main.py"
    exit 1
fi