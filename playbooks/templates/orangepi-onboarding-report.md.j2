# OrangePi Onboarding Report

**Generated:** {{ report_timestamp }}  
**Host:** {{ report_host }}  
**IP Address:** {{ report_ip }}  
**Profile:** {{ report_profile }}  
**OS:** {{ report_os }}  

## Configuration Summary

### Deployment Profile: {{ report_profile | title }}

**Components Configured:**
{% for component in report_components %}
- [OK] {{ component | title }}
{% endfor %}

### System Status

- **Reboot Required:** {{ 'Yes' if report_reboot_required else 'No' }}
- **Health API Status:** {{ 'Healthy' if report_health_api == 200 else 'Pending' }}

### Access Information

- **SSH Access:** `ssh {{ report_user }}@{{ report_ip }}`
{% if 'tailscale' in report_components %}
- **Tailscale:** Connected with OrangePi device tags
{% endif %}
{% if 'shell' in report_components %}
- **Enhanced Shell:** zsh with Oh My Zsh and OrangePi utilities
{% endif %}
- **Health API:** `http://{{ report_ip }}:9090/health`

### Available Commands
{% if 'shell' in report_components %}
- `oastatus` - Check all services
- `oahealth` - API health check  
- `oainfo` - System information
- `oatailscale` - Tailscale management
- `oaupdate` - Update project
- `oareboot` - Safe reboot
{% endif %}

### Integration

This OrangePi device has been configured to integrate with:
- **oaDashboard** - For centralized monitoring
- **opi-setup** - Enhanced with Ansible automation
- **Tailscale VPN** - For secure network access

### Next Steps

1. {% if report_reboot_required %}**Reboot the device** to complete setup{% else %}Device is ready for use{% endif %}
2. **Verify connectivity** from oaDashboard
3. **Test services** using `oastatus` command
4. **Configure player** settings if needed

---
*Report generated by OrangePi Ansible onboarding system*