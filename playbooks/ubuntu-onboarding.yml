---
# Ubuntu Onboarding Playbook - Optimized for onboard-ubuntu script
# Streamlined, intelligent Ubuntu machine setup with component-based deployment

- name: Ubuntu Machine Onboarding
  hosts: ubuntu_servers
  gather_facts: true
  become: false
  vars_files:
    - ../group_vars/all/vault.yml
  vars:
    # Default deployment mode - overridden by script
    deployment_mode: "server"
    # Components to configure - set by onboard-ubuntu script via tags
    configure_components: []
  pre_tasks:
    - name: Display onboarding banner
      ansible.builtin.debug:
        msg: |
          ╔══════════════════════════════════════════════════════════════╗
          ║                   Ubuntu Machine Onboarding                 ║
          ╠══════════════════════════════════════════════════════════════╣
          ║ Target: {{ inventory_hostname }} ({{ ansible_host }})
          ║ User: {{ ansible_user }}
          ║ Profile: {{ deployment_mode | upper }}
          ║ Timestamp: {{ ansible_date_time.iso8601 }}
          ╚══════════════════════════════════════════════════════════════╝

    - name: Verify connection and gather facts
      ansible.builtin.setup:
        gather_subset:
          - "!all"
          - "!any"
          - "distribution"
          - "network"
          - "hardware"

    - name: Validate Ubuntu system
      ansible.builtin.assert:
        that:
          - ansible_distribution == "Ubuntu"
          - ansible_distribution_major_version | int >= 18
        fail_msg: |
          [FAIL] System validation failed:
          - OS: {{ ansible_distribution }} {{ ansible_distribution_version }}
          - This script requires Ubuntu 18.04 or newer
        success_msg: "[OK] Ubuntu {{ ansible_distribution_version }} - Compatible"

    - name: Display system information
      ansible.builtin.debug:
        msg: |
          [LIST] System Information:
          ├─ Hostname: {{ ansible_hostname }}
          ├─ Architecture: {{ ansible_architecture }}
          ├─ Kernel: {{ ansible_kernel }}
          ├─ Memory: {{ (ansible_memtotal_mb / 1024) | round(1) }}GB
          ├─ CPU Cores: {{ ansible_processor_vcpus }}
          ├─ Primary IP: {{ ansible_default_ipv4.address | default('N/A') }}
          └─ Profile: {{ deployment_mode }}

  tasks:
    # Base System Setup (Always Required)
    - name: Base system configuration
      ansible.builtin.include_role:
        name: ubuntu/base
      vars:
        base_role_name: "Server Base Setup"
      tags: [always, base]

    # Security Hardening (Always Required)
    - name: Security hardening
      ansible.builtin.include_role:
        name: ubuntu/security
      vars:
        security_role_name: "Security Hardening"
      tags: [always, security]

    # Shell Enhancement
    - name: Shell enhancement
      ansible.builtin.include_role:
        name: ubuntu/shell
      vars:
        shell_role_name: "Shell Enhancement"
      tags: [shell]

    # System Optimization
    - name: Server optimization
      ansible.builtin.include_role:
        name: ubuntu/server_optimization
      vars:
        server_optimization_role_name: "Server Optimization"
      tags: [optimization]

    # Network Configuration
    - name: Network configuration
      ansible.builtin.include_role:
        name: ubuntu/network/tailscale
      vars:
        tailscale_role_name: "Network & Tailscale Setup"
      tags: [network, tailscale]

    # Docker (Development Profile)
    - name: Docker installation
      ansible.builtin.include_role:
        name: ubuntu/docker
      vars:
        docker_role_name: "Docker Container Runtime"
      tags: [docker]
      when: deployment_mode == "development"

    # Python Environment (ML Profile)
    - name: Python development environment
      ansible.builtin.include_role:
        name: ubuntu/python
      vars:
        python_role_name: "Python Development Environment"
      tags: [python]
      when: deployment_mode == "ml"

    # NVIDIA Drivers (ML Profile)
    - name: NVIDIA GPU support
      ansible.builtin.include_role:
        name: ubuntu/nvidia
      vars:
        nvidia_role_name: "NVIDIA GPU Drivers"
      tags: [nvidia]
      when: deployment_mode == "ml"

    # ML Workstation Setup (ML Profile)
    - name: ML workstation configuration
      ansible.builtin.include_role:
        name: ubuntu/ml_workstation
      vars:
        ml_workstation_role_name: "ML Workstation Setup"
      tags: [ml_workstation]
      when: deployment_mode == "ml"

    # Monitoring (All profiles except minimal)
    - name: System monitoring
      ansible.builtin.include_role:
        name: ubuntu/monitoring
      vars:
        monitoring_role_name: "System Monitoring"
      tags: [monitoring]
      when: deployment_mode != "minimal"

  post_tasks:
    - name: Check for required reboot
      ansible.builtin.stat:
        path: /var/run/reboot-required
      register: reboot_required

    - name: Display completion summary
      ansible.builtin.debug:
        msg: |
          ╔═══════════════════════════════════════════════════════════════╗
          ║              [SUCCESS] Ubuntu Onboarding Completed!                 ║
          ╠═══════════════════════════════════════════════════════════════╣
          ║                                                               ║
          ║ Host: {{ inventory_hostname }} ({{ ansible_host }})
          ║ Profile: {{ deployment_mode | upper }}
          ║                                                               ║
          ║ [PACKAGE] Configured Components:                                     ║
          {% if deployment_mode == "server" %}
          ║ ├─ [OK] Base system & essential packages                        ║
          ║ ├─ [OK] Security hardening (sudo, SSH, firewall)               ║
          ║ ├─ [OK] Enhanced shell (zsh with oh-my-zsh)                    ║
          ║ ├─ [OK] System optimization & ethernet stability                ║
          ║ ├─ [OK] Tailscale VPN with subnet routing                      ║
          ║ └─ [OK] System monitoring                                       ║
          {% elif deployment_mode == "ml" %}
          ║ ├─ [OK] Base system & essential packages                        ║
          ║ ├─ [OK] Security hardening (sudo, SSH, firewall)               ║
          ║ ├─ [OK] Enhanced shell (zsh with oh-my-zsh)                    ║
          ║ ├─ [OK] System optimization & ethernet stability                ║
          ║ ├─ [OK] Python development environment (PyEnv + UV)            ║
          ║ ├─ [OK] NVIDIA drivers & CUDA support                          ║
          ║ ├─ [OK] ML workstation tools & environment                     ║
          ║ ├─ [OK] Tailscale VPN with subnet routing                      ║
          ║ └─ [OK] System monitoring                                       ║
          {% elif deployment_mode == "development" %}
          ║ ├─ [OK] Base system & essential packages                        ║
          ║ ├─ [OK] Security hardening (sudo, SSH, firewall)               ║
          ║ ├─ [OK] Enhanced shell (zsh with oh-my-zsh)                    ║
          ║ ├─ [OK] System optimization & ethernet stability                ║
          ║ ├─ [OK] Docker container runtime                                ║
          ║ ├─ [OK] Tailscale VPN with subnet routing                      ║
          ║ └─ [OK] System monitoring                                       ║
          {% elif deployment_mode == "minimal" %}
          ║ ├─ [OK] Base system & essential packages                        ║
          ║ └─ [OK] Security hardening (sudo, SSH, firewall)               ║
          {% endif %}
          ║                                                               ║
          ║ [LINK] Access Information:                                       ║
          ║ • SSH: ssh {{ ansible_user }}@{{ ansible_host }}
          {% if deployment_mode != "minimal" %}
          ║ • Tailscale: Connected with tags [tag:oa-ubuntu]            ║
          {% endif %}
          ║ • Shell: Enhanced zsh with oh-my-zsh                        ║
          ║                                                               ║
          {% if reboot_required.stat.exists %}
          ║ [WARNING] REBOOT REQUIRED for system updates to take effect         ║
          ║   Run: sudo reboot                                           ║
          {% else %}
          ║ [OK] No reboot required - system ready for use                 ║
          {% endif %}
          ║                                                               ║
          ║ [LAUNCH] Your Ubuntu machine is ready for OrangeAd operations!    ║
          ╚═══════════════════════════════════════════════════════════════╝

    - name: Generate onboarding report
      ansible.builtin.template:
        src: "../oaAnsible/templates/onboarding-report.md.j2"
        dest: "/tmp/ubuntu-onboarding-{{ inventory_hostname }}-{{ ansible_date_time.epoch }}.md"
        mode: "0644"
      delegate_to: localhost
      vars:
        report_timestamp: "{{ ansible_date_time.iso8601 }}"
        report_host: "{{ inventory_hostname }}"
        report_ip: "{{ ansible_host }}"
        report_profile: "{{ deployment_mode }}"
        report_user: "{{ ansible_user }}"
        report_os: "{{ ansible_distribution }} {{ ansible_distribution_version }}"
        report_reboot_required: "{{ reboot_required.stat.exists }}"
        onboarding_role_name: "Onboarding Report Generator"
      tags: [report]
      failed_when: false
