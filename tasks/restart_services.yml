---
- name: Restart macOS API service
  ansible.builtin.shell: |
    launchctl unload {{ ansible_user_dir }}/Library/LaunchAgents/com.orangead.deviceapi.plist || true
    launchctl load -w {{ ansible_user_dir }}/Library/LaunchAgents/com.orangead.deviceapi.plist
  become: false
  register: api_restart
  changed_when: true
  when: ansible_distribution == "MacOSX"
  tags: ["services", "restart"]

- name: Restart tracker service
  ansible.builtin.shell: |
    launchctl unload {{ ansible_user_dir }}/Library/LaunchAgents/com.orangead.tracker.plist || true
    launchctl load -w {{ ansible_user_dir }}/Library/LaunchAgents/com.orangead.tracker.plist
  become: false
  register: tracker_restart
  changed_when: true
  when: ansible_distribution == "MacOSX"
  tags: ["services", "restart"]

- name: Display service startup notice
  ansible.builtin.debug:
    msg: "‚è≥ Waiting for services to start up (15 seconds)..."
  when: ansible_distribution == "MacOSX"
  tags: ["services", "verify"]

- name: Wait for services to start up
  ansible.builtin.wait_for:
    timeout: 15
  when: ansible_distribution == "MacOSX"
  tags: ["services", "verify"]

- name: Check macOS API service via HTTP (with retries)
  ansible.builtin.uri:
    url: http://localhost:9090/health
    method: GET
    status_code: 200
    timeout: 10
  register: api_health_check
  ignore_errors: true
  when: ansible_distribution == "MacOSX"
  tags: ["services", "verify"]
  delegate_to: "{{ inventory_hostname }}"
  retries: 3
  delay: 5
  until: api_health_check.status == 200

- name: Check tracker service via HTTP (with retries)
  ansible.builtin.uri:
    url: http://localhost:8080/api/stats
    method: GET
    status_code: 200
    timeout: 10
  register: tracker_health_check
  ignore_errors: true
  when: ansible_distribution == "MacOSX"
  tags: ["services", "verify"]
  delegate_to: "{{ inventory_hostname }}"
  retries: 3
  delay: 3
  until: tracker_health_check.status == 200

- name: Show service status
  ansible.builtin.debug:
    msg: |
      === SERVICE STATUS ===
      API Service (port 9090): {{ 'Running  ' if api_health_check.status == 200 else 'Not running ERROR:' }}
      {% if api_health_check.status != 200 %}
      API Check attempts: {{ api_health_check.attempts | default(1) }}
      API Last error: {{ api_health_check.msg | default('Unknown') }}
      {% endif %}
      Tracker Service (port 8080): {{ 'Running  ' if tracker_health_check is defined and tracker_health_check.status == 200 else 'Not running ERROR:' }}
      {% if tracker_health_check is defined and tracker_health_check.status != 200 %}
      Tracker Check attempts: {{ tracker_health_check.attempts | default(1) }}
      Tracker Last error: {{ tracker_health_check.msg | default('Unknown') }}
      {% endif %}
  when: ansible_distribution == "MacOSX"
  tags: ["services", "verify"]
